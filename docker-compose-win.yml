version: '3'

services:
    redis_cluster:
        # image: bitnami/redis-cluster
        image: redis_cluster_image
        build:
            context: redis
        container_name: redis_cluster_jar
        # entrypoint: sleep infinity
        # entrypoint: bash "tail -f /dev/null"
        # command: bash -c "./start.sh && sleep infinity"
        command: bash -c "./start.sh && sleep 5 && yes yes | redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 && sleep infinity"
        # command: bash -c "sleep infinity"
        # command: bash -c "redis-server /app/node_1/redis.conf && cd /app/node_2 && redis-server /app/node_2/redis.conf && cd /app/node_3 && redis-server /app/node_3/redis.conf"
        ports:
            - "7000:7000"
            - "7001:7001"
            - "7002:7002"

    redis_tests:
        build:
            context: redis/tests
        image: redis_tests_image
        container_name: redis_tests_jar
        command: bash -c "sleep infinity"


    redis:
        image: redis:6.0.16
        container_name: redis_jar
        ports:
            - "6379:6379"         

    # django_channels:
    #     &base_django
    #     # docker run --rm -it -p 8000:8000 django_simple /bin/sh
    #     # docker run --rm -it -p 8000:8000 django_simple bash        
        
    #     build:
    #         context: django_channels
    #     # container_name: django_channels_jar
    #     # command: python manage.py runserver 0.0.0.0:8000

    #     # command: daphne -b 0.0.0.0 -p 8000 prototype_project.asgi:application
    #     # command: uvicorn --workers=1 --port 8000 --host 0.0.0.0 prototype_project.asgi:application
    #     # command: uvicorn --port 8000 --host 0.0.0.0 prototype_project.asgi:application
    #     # command: gunicorn -w 8 -b 0.0.0.0:8000 --preload prototype_project.asgi:application -k uvicorn.workers.UvicornWorker

    #     command: gunicorn -w 1 -b 0.0.0.0:8000 prototype_project.wsgi:application -k meinheld.gmeinheld.MeinheldWorker      
    #     image: django_channels_image
    #     ports:
    #         - "8000:8000"          
    #     environment:
    #         # - REDIS_HOST=redismaster1
    #         # - REDIS_HOST=redisreplica3
    #         # - REDIS_HOST=redis-node-0
    #         # - REDIS_HOST=redis_cluster
    #         # - REDIS_PORT=7000
    #         - REDIS_HOST=redis
    #         - REDIS_PORT=6379
    #     # service deployment
    #     depends_on:
    #         - redis
    #         # - redis_cluster
    #         # - redis-node-0
    #         # - redismaster1
    #     deploy:
    #         mode: replicated
    #         replicas: 4

